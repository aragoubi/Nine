<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:Nine.Views.Controls"
    xmlns:RadialMenu="clr-namespace:RadialMenu.Controls;assembly=RadialMenu"
    xmlns:MahApps="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:chart="clr-namespace:De.TorstenMandelkow.MetroChart;assembly=De.TorstenMandelkow.MetroChart">

    <ResourceDictionary.MergedDictionaries>

        <!-- Resources -->
        <ResourceDictionary Source="/Resources/ConverterDictionary.xaml" />
        <ResourceDictionary Source="/Resources/EntypoDictionary.xaml" />
        <ResourceDictionary Source="/Resources/IconDictionary.xaml" />
        <ResourceDictionary Source="/Resources/TagDictionary.xaml" />

        <!-- MahApps styles -->
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Red.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />

        <!-- Nine styles -->
        <ResourceDictionary>

            <!-- Colors -->
            <Color x:Key="RedNine">#ED3423</Color>
            <Color x:Key="RedNineLight">#ED7D72</Color>
            <Color x:Key="RedNineDark">#C73427</Color>
            <Color x:Key="RedAccentBackground">#E33C2C</Color>
            <Color x:Key="RedAccentBorder">#E22312</Color>
            <Color x:Key="LessonTileBackground">#E51400</Color>
            <Color x:Key="LessonTitleTileBackground">#CCE51400</Color>
            <Color x:Key="FlyoutBackground">#2B2B2B</Color>
            <Color x:Key="ContentBackground">#E5E5E5</Color>
            <Color x:Key="SideBarBackground">#DCDCDC</Color>

            <!-- Brushes -->
            <SolidColorBrush x:Key="RedNineBrush" Color="{StaticResource RedNine}" />
            <SolidColorBrush x:Key="RedNineLightBrush" Color="{StaticResource RedNineLight}" />
            <SolidColorBrush x:Key="RedNineDarkBrush" Color="{StaticResource RedNineDark}" />
            <SolidColorBrush x:Key="RedAccentBackgroundBrush" Color="{StaticResource RedAccentBackground}" />
            <SolidColorBrush x:Key="RedAccentBorderBrush" Color="{StaticResource RedAccentBorder}" />
            <SolidColorBrush x:Key="LessonTileBackgroundBrush" Color="{StaticResource LessonTileBackground}" />
            <SolidColorBrush x:Key="LessonTitleTileBackgroundBrush" Color="{StaticResource LessonTitleTileBackground}" />
            <SolidColorBrush x:Key="FlyoutBackgroundBrush" Color="{StaticResource FlyoutBackground}" />
            <SolidColorBrush x:Key="ContentBackgroundBrush" Color="{StaticResource ContentBackground}" />
            <SolidColorBrush x:Key="SideBarBackgroundBrush" Color="{StaticResource SideBarBackground}" />

            <!-- MasterSwitch : Button to select Current Page -->
            <Style x:Key="MasterSwitch" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="#B0B0B0" />
                <Setter Property="Foreground" Value="#000" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Ellipse
                                    Margin="4"
                                    Stroke="Transparent"
                                    StrokeThickness="0"
                                    Fill="{TemplateBinding Background}" />
                                <Ellipse x:Name="ellipse"
                                         Margin="4"
                                         Stroke="{TemplateBinding BorderBrush}"
                                         StrokeThickness="2"
                                         Fill="Transparent" />
                                <ContentPresenter
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="#898989" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="BorderBrush" Value="#494949" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- MasterSwitch : Button to select Current Page (when active) -->
            <Style x:Key="MasterSwitchActive" TargetType="Button" BasedOn="{StaticResource MasterSwitch}">
                <Setter Property="Background" Value="{StaticResource RedAccentBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource RedAccentBorderBrush}" />
                <Setter Property="Foreground" Value="#FFF" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource RedAccentBorderBrush}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource RedAccentBorderBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="ScrollViewer">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            </Style>

            <Style TargetType="ItemsControl">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            </Style>

            <Style TargetType="RepeatButton">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            </Style>

            <!-- ScrollViewer template/style (pinchable/scrollable) -->
            <Style TargetType="Controls:TouchScrollViewer">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="HorizontalScrollBarVisibility" Value="Visible" />
                <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Controls:TouchScrollViewer">

                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Grid x:Name="PART_ScrollContentPresenterParent" Grid.Row="0" Grid.Column="0"
                                      IsManipulationEnabled="{TemplateBinding IsContentManipulationEnabled}">
                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" />
                                </Grid>

                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                           Orientation="Vertical"
                                           Grid.Row="0"
                                           Grid.Column="1"
                                           Value="{TemplateBinding VerticalOffset}"
                                           Maximum="{TemplateBinding ScrollableHeight}"
                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />

                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                           Orientation="Horizontal"
                                           Grid.Row="1"
                                           Grid.Column="0"
                                           Value="{TemplateBinding HorizontalOffset}"
                                           Maximum="{TemplateBinding ScrollableWidth}"
                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Default button style, designed to be overridable -->
            <Style x:Key="OverridableButton" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="IsEnabled" Value="True" />
                <Setter Property="Foreground" Value="#111111" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="#CCCCCC" />
                <Setter Property="Background" Value="#F7F7F7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Padding="{TemplateBinding Padding}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#EFEFEF" />
                        <Setter Property="BorderBrush" Value="#AFAFAF" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#D8D8D9" />
                        <Setter Property="BorderBrush" Value="#333333" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="#FAFAFA" />
                        <Setter Property="BorderBrush" Value="#E3E3E3" />
                        <Setter Property="Foreground" Value="#AFAFAF" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Button to select Lesson Slide -->
            <Style x:Key="LessonThumb" TargetType="Button" BasedOn="{StaticResource OverridableButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Padding="{TemplateBinding Padding}" BorderThickness="2"
                                    BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Button to select Lesson Slide (when active) -->
            <Style x:Key="LessonThumbActive" TargetType="Button" BasedOn="{StaticResource LessonThumb}">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Border Panel.ZIndex="0" Padding="{TemplateBinding Padding}" BorderThickness="2"
                                        BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0"
                                        Background="{TemplateBinding Background}">
                                    <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
                                </Border>
                                <Polygon Panel.ZIndex="10" Fill="{StaticResource RedNineBrush}"
                                         HorizontalAlignment="Right" VerticalAlignment="Top">
                                    <Polygon.Points>
                                        <Point X="0" Y="0" />
                                        <Point X="24" Y="0" />
                                        <Point X="24" Y="24" />
                                    </Polygon.Points>
                                </Polygon>
                                <Rectangle Panel.ZIndex="20" Fill="#FFFFFF" HorizontalAlignment="Right"
                                           VerticalAlignment="Top" Width="10" Height="8" Margin="3">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_check}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="#F9F9F9" />
                        <Setter Property="BorderBrush" Value="{StaticResource RedNineBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <!-- Button to select Lesson Slide (when active : me & teacher) -->
            <Style x:Key="LessonThumbTeacherActive" TargetType="Button" BasedOn="{StaticResource LessonThumb}">
                <Setter Property="Background" Value="#F9F9F9" />
                <Setter Property="BorderBrush" Value="#0000FF" />
            </Style>


            <!-- Button to select Lesson Slide (when active : me & teacher) -->
            <Style x:Key="LessonThumbBothActive" TargetType="Button" BasedOn="{StaticResource LessonThumbActive}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Border Panel.ZIndex="0" Padding="{TemplateBinding Padding}" BorderThickness="2"
                                        BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0"
                                        Background="{TemplateBinding Background}">
                                    <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
                                </Border>
                                <Polygon Panel.ZIndex="10" Fill="#AA00FF" HorizontalAlignment="Right"
                                         VerticalAlignment="Top">
                                    <Polygon.Points>
                                        <Point X="0" Y="0" />
                                        <Point X="24" Y="0" />
                                        <Point X="24" Y="24" />
                                    </Polygon.Points>
                                </Polygon>
                                <Rectangle Panel.ZIndex="20" Fill="#FFFFFF" HorizontalAlignment="Right"
                                           VerticalAlignment="Top" Width="10" Height="8" Margin="3">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_check}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="#F9F9F9" />
                        <Setter Property="BorderBrush" Value="#AA00FF" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Button to select Lesson Exercise -->
            <Style x:Key="ExerciseThumbGraphic" TargetType="Button" BasedOn="{StaticResource OverridableButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <StackPanel>
                                <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="White" BorderThickness="2">
                                    <Rectangle
                                        Width="50"
                                        Height="50"
                                        Fill="#FF555555"
                                        Margin="20">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform"
                                                         Visual="{DynamicResource appbar_draw_pixel_fill_grid}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Border>
                                <TextBlock HorizontalAlignment="Right" Foreground="Black" FontWeight="Bold">
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </TextBlock>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!-- Button to select Lesson Exercise Active -->
            <Style x:Key="ExerciseThumbGraphicActive" TargetType="Button" BasedOn="{StaticResource OverridableButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <StackPanel>
                                <Border Padding="{TemplateBinding Padding}" BorderBrush="Black" Background="White"
                                        BorderThickness="2">
                                    <Rectangle
                                        Width="50"
                                        Height="50"
                                        Fill="#FF555555"
                                        Margin="20">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform"
                                                         Visual="{DynamicResource appbar_draw_pixel_fill_grid}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Border>
                                <TextBlock HorizontalAlignment="Right" Foreground="Black" FontWeight="Bold">
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </TextBlock>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Button to select Lesson Exercise -->
            <Style x:Key="ExerciseThumbQuiz" TargetType="Button" BasedOn="{StaticResource OverridableButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <StackPanel>
                                <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="White" BorderThickness="2">
                                    <Rectangle
                                        Width="50"
                                        Height="50"
                                        Fill="#FF555555"
                                        Margin="20">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{DynamicResource appbar_list_check}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Border>
                                <TextBlock HorizontalAlignment="Right" Foreground="Black" FontWeight="Bold">
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </TextBlock>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Button to select Lesson Exercise Active -->
            <Style x:Key="ExerciseThumbQuizActive" TargetType="Button" BasedOn="{StaticResource OverridableButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <StackPanel>
                                <Border Padding="{TemplateBinding Padding}" BorderBrush="Black" Background="White"
                                        BorderThickness="2">
                                    <Rectangle
                                        Width="50"
                                        Height="50"
                                        Fill="#FF555555"
                                        Margin="20">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Uniform" Visual="{DynamicResource appbar_list_check}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Border>
                                <TextBlock HorizontalAlignment="Right" Foreground="Black" FontWeight="Bold">
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </TextBlock>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!-- Button to select Lesson Layer -->
            <Style x:Key="ClassicLayerSelecter" TargetType="Button" BasedOn="{StaticResource OverridableButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Padding="{TemplateBinding Padding}" BorderThickness="2"
                                    BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="QuestionLayerSelecter" TargetType="Button" BasedOn="{StaticResource ClassicLayerSelecter}">
                <Setter Property="Background" Value="#4960EA" />
                <Setter Property="Foreground" Value="#FFFFFF" />
                <Setter Property="BorderBrush" Value="#999999" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#3E54DB" />
                        <Setter Property="Foreground" Value="#FFFFFF" />
                        <Setter Property="BorderBrush" Value="#888888" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#3E54DB" />
                        <Setter Property="Foreground" Value="#FFFFFF" />
                        <Setter Property="BorderBrush" Value="#444444" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="AnswerLayerSelecter" TargetType="Button" BasedOn="{StaticResource ClassicLayerSelecter}">
                <Setter Property="Background" Value="#56CF66" />
                <Setter Property="Foreground" Value="#FFFFFF" />
                <Setter Property="BorderBrush" Value="#999999" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#4FC45F" />
                        <Setter Property="Foreground" Value="#FFFFFF" />
                        <Setter Property="BorderBrush" Value="#888888" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#4FC45F" />
                        <Setter Property="Foreground" Value="#FFFFFF" />
                        <Setter Property="BorderBrush" Value="#444444" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Button to select Lesson Layer (when active) -->
            <Style x:Key="ClassicLayerSelecterActive" TargetType="Button"
                   BasedOn="{StaticResource ClassicLayerSelecter}">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Border Panel.ZIndex="0" Padding="{TemplateBinding Padding}" BorderThickness="2"
                                        BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0"
                                        Background="{TemplateBinding Background}">
                                    <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
                                </Border>
                                <Polygon Panel.ZIndex="10" Fill="{StaticResource RedNineBrush}"
                                         HorizontalAlignment="Right" VerticalAlignment="Top">
                                    <Polygon.Points>
                                        <Point X="0" Y="0" />
                                        <Point X="24" Y="0" />
                                        <Point X="24" Y="24" />
                                    </Polygon.Points>
                                </Polygon>
                                <Rectangle Panel.ZIndex="20" Fill="#FFFFFF" HorizontalAlignment="Right"
                                           VerticalAlignment="Top" Width="10" Height="8" Margin="3">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_check}" />
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="#111111" />
                        <Setter Property="Background" Value="#F9F9F9" />
                        <Setter Property="BorderBrush" Value="{StaticResource RedNineBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="QuestionLayerSelecterActive" TargetType="Button"
                   BasedOn="{StaticResource ClassicLayerSelecterActive}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="#4960EA" />
                        <Setter Property="Foreground" Value="#FFFFFF" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="AnswerLayerSelecterActive" TargetType="Button"
                   BasedOn="{StaticResource ClassicLayerSelecterActive}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="#56CF66" />
                        <Setter Property="Foreground" Value="#FFFFFF" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Button style in Flyout -->
            <Style x:Key="FlyoutButtonStyle" TargetType="Button">
                <!--Hauteur du surlignage du bouton-->
                <Setter Property="Height" Value="30" />
                <Setter Property="Margin" Value="0,5" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="grid">
                                <Grid.ColumnDefinitions>
                                    <!--Pour modifier la taille du padding gauche-->
                                    <ColumnDefinition Width="15" />
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="1" Fill="White" Width="20" Height="20"
                                           OpacityMask="{TemplateBinding Tag}" />
                                <ContentPresenter Grid.Column="2" Margin="17,0,0,0" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  Width="Auto" TextElement.FontFamily="Segoe UI Light"
                                                  TextElement.FontSize="16" VerticalAlignment="Center" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True" />
                                <Trigger Property="IsDefaulted" Value="True" />
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="grid" Value="{StaticResource GrayBrush3}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True" />
                                <Trigger Property="IsEnabled" Value="False" />
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontSize" Value="14" />
            </Style>

            <!--Button style for Tile-->
            <Style x:Key="TileButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="140" />
                <Setter Property="Height" Value="140" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Background" Value="{StaticResource RedNineBrush}" />
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding Background}" BorderThickness="2">
                                <ContentPresenter RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsPressed"
                                         Value="True">
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="0.98"
                                                            ScaleY="0.98"
                                                            CenterX="0.5"
                                                            CenterY="0.5" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!--Style pour tuile authentification Eleve-->
            <Style x:Key="TileAuthenticateStudentStyle" TargetType="Button" BasedOn="{StaticResource TileButtonStyle}">
                <Setter Property="Foreground" Value="#FF3E3E3E" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border BorderBrush="{TemplateBinding Background}" BorderThickness="1" CornerRadius="0">
                                <Grid Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Fill="White" Height="45" Width="45" Grid.Column="0">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Visual="{StaticResource student_icon}" Stretch="Uniform" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <Grid Background="White" Grid.Column="1">
                                        <ContentPresenter RecognizesAccessKey="True" VerticalAlignment="Center"
                                                          Margin="15 0" />
                                    </Grid>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsPressed"
                                         Value="True">
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="0.98"
                                                            ScaleY="0.98"
                                                            CenterX="0.5"
                                                            CenterY="0.5" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Style pour tuile authentification Prof-->
            <Style x:Key="TileAuthenticateTeacherStyle" TargetType="Button" BasedOn="{StaticResource TileButtonStyle}">
                <Setter Property="Foreground" Value="#FF3E3E3E" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border BorderBrush="{TemplateBinding Background}" BorderThickness="1" CornerRadius="0">
                                <Grid Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Fill="White" Height="45" Width="45" Grid.Column="0">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Visual="{StaticResource teacher_icon}" Stretch="Uniform" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <Grid Background="White" Grid.Column="1">
                                        <ContentPresenter RecognizesAccessKey="True" VerticalAlignment="Center"
                                                          Margin="15 0" />
                                    </Grid>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsPressed"
                                         Value="True">
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="0.98"
                                                            ScaleY="0.98"
                                                            CenterX="0.5"
                                                            CenterY="0.5" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!-- CheckBox for Questions part -->
            <Style x:Key="NineCheckBox" TargetType="CheckBox">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Background" Value="#444444" />
                <Setter Property="Width" Value="30" />
                <Setter Property="Height" Value="30" />
                <!--<Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform X="-15" Y="-15"/>
                    </Setter.Value>
                </Setter>-->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid
                                Background="Transparent"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}">
                                <Viewbox>
                                    <Canvas Width="35.297001" Height="30.292999">
                                        <Path Fill="{TemplateBinding Background}"
                                              Data="m 0 0.293 30 0 0 30 -30 0 0 -30 z m 5 5 0 20 20 0 0 -20 -20 0 z" />
                                    </Canvas>
                                </Viewbox>
                                <ContentPresenter Margin="-9 -7 0 0" IsHitTestVisible="False" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#000000" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="CheckBox">
                                    <Grid
                                        Background="Transparent"
                                        Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}">
                                        <Viewbox>
                                            <Canvas Width="35.296875" Height="30.292969">
                                                <Path Fill="{TemplateBinding Background}"
                                                      Data="m 0 0.292969 0 30 30 0 0 -18.162109 -5 5.99414 0 7.167969 -20 0 0 -20 19.527344 0 4.4375 -5 -28.964844 0 z" />
                                                <Path Fill="#E22312"
                                                      Data="m 31.787110 0 -14.537110 16.375000 L 9.898438 9.441406 6.388672 12.951172 17.667969 24.230469 35.296875 3.091797 31.787110 0 Z" />
                                            </Canvas>
                                        </Viewbox>
                                        <ContentPresenter Margin="-9 -7 0 0" IsHitTestVisible="False" />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- RadioButton for Questions part -->
            <Style x:Key="NineRadioButton" TargetType="RadioButton">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Background" Value="#444444" />
                <Setter Property="Width" Value="30" />
                <Setter Property="Height" Value="30" />
                <!--<Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform X="-15" Y="-15"/>
                    </Setter.Value>
                </Setter>-->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Grid
                                Background="Transparent"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}">
                                <Viewbox>
                                    <Canvas Width="30" Height="30">
                                        <Ellipse
                                            Width="26"
                                            Height="26"
                                            Stroke="{TemplateBinding Background}"
                                            StrokeThickness="4" />
                                    </Canvas>
                                </Viewbox>
                                <ContentPresenter Margin="-8 -4 0 0" IsHitTestVisible="False" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#000000" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="RadioButton">
                                    <Grid
                                        Background="Transparent"
                                        Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}">
                                        <Viewbox>
                                            <Canvas Width="30" Height="30">
                                                <Ellipse
                                                    Width="26"
                                                    Height="26"
                                                    Stroke="{TemplateBinding Background}"
                                                    StrokeThickness="4" />
                                                <Ellipse
                                                    Canvas.Top="7"
                                                    Canvas.Left="7"
                                                    Width="12"
                                                    Height="12"
                                                    Fill="#E22312" />
                                            </Canvas>
                                        </Viewbox>
                                        <ContentPresenter Margin="-8 -4 0 0" IsHitTestVisible="False" />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>

    </ResourceDictionary.MergedDictionaries>

</ResourceDictionary>